@model WebBanHangOnline.Models.ProductViewModel
@{
    ViewBag.Title = "Danh sách sản phẩm";
    var pagination = Model.Pagination;
}
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/categories_styles.css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/categories_responsive.css">
<div class="container product_section_container">
    <div class="row">
        <div class="col product_section clearfix">

            <!-- Breadcrumbs -->

            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a href="/">Trang chủ</a></li>
                    <li class="active"><a href="/products/index"><i class="fa fa-angle-right" aria-hidden="true"></i>Sản phẩm</a></li>
                </ul>
            </div>

            <!-- Sidebar -->

            <div class="sidebar">
                <div class="sidebar_section">
                    <div class="sidebar_title">
                        <h5>Danh mục</h5>
                    </div>
                    @Html.Action("MenuLeft", "Menu")
                </div>

                <!-- Price Range Filtering -->
                <div class="sidebar_section">
                    <div class="sidebar_title">
                        <h5>Lọc theo giá</h5>
                    </div>
                    <p>
                        <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
                    </p>
                    <div id="slider-range"></div>
                    <div class="filter_button"><span>Lọc</span></div>
                </div>

                @Html.Action("Refresh", "Home")

            </div>

            <div class="main_content">

                <div class="products_iso">
                    <div class="row">
                        <div class="col">

                            <div class="product_sorting_container product_sorting_container_top">
                                <ul class="product_sorting">
                                    <li>
                                        <span class="type_sorting_text">@(string.IsNullOrEmpty(pagination.OrderBy) ? "Sắp xếp" : pagination.OrderByStr) </span>
                                        <i class="fa fa-angle-down"></i>
                                        <ul class="sorting_type">
                                            <li class="type_sorting_btn" onclick="ChangePage(@pagination.CurrentPage,@pagination.PageSize, 'price')"><span>Giá</span></li>
                                            <li class="type_sorting_btn" onclick="ChangePage(@pagination.CurrentPage,@pagination.PageSize, 'name')"><span>Tên sản phẩm</span></li>
                                        </ul>
                                    </li>
                                    <li>
                                        <span>Hiển thị</span>
                                        <span class="num_sorting_text" id="showItem">@pagination.PageSize</span>
                                        <i class="fa fa-angle-down"></i>
                                        <ul class="sorting_num">
                                            <li class="num_sorting_btn" onclick="ChangePage(@pagination.CurrentPage, 3)"><span>3</span></li>
                                            <li class="num_sorting_btn" onclick="ChangePage(@pagination.CurrentPage, 6)"><span>6</span></li>
                                            <li class="num_sorting_btn" onclick="ChangePage(@pagination.CurrentPage, 12)"><span>12</span></li>
                                            <li class="num_sorting_btn" onclick="ChangePage(@pagination.CurrentPage, 24)"><span>24</span></li>
                                        </ul>
                                    </li>
                                </ul>
                            </div>

                            <!-- Product Grid -->

                            <div class="product-grid">
                                @if (Model != null && Model.Products.Any())
                                {
                                    foreach (var item in Model.Products)
                                    {
                                        var strImge = "";
                                        var img = item.ProductImage.FirstOrDefault(x => x.IsDefault);
                                        if (img != null)
                                        {
                                            strImge = img.Image;
                                        }
                                        var wishlist = item.Wishlists.FirstOrDefault(x => x.UserName == User.Identity.Name);
                                        var isWishlist = false;
                                        if (wishlist != null)
                                        {
                                            isWishlist = true;
                                        }
                                        <div class="product-item @item.ProductCategory.Alias">
                                            <div class="product discount product_filter">
                                                <div class="product_image">
                                                    <img src="@strImge" alt="@item.Title">
                                                </div>
                                                @if (isWishlist == true)
                                                {
                                                    <div data-id="@item.Id" class="favorite favorite_left active"></div>
                                                }
                                                else
                                                {
                                                    <div data-id="@item.Id" class="favorite favorite_left"></div>
                                                }
                                                @if (item.PriceSale > 0)
                                                {
                                                    <div class="product_bubble product_bubble_right product_bubble_red d-flex flex-column align-items-center"><span>sale</span></div>
                                                }                                                <div class="product_info">
                                                    <h6 class="product_name"><a href="/chi-tiet/@item.Alias-p@(item.Id)">@item.Title</a></h6>
                                                    @if (item.PriceSale > 0)
                                                    {
                                                        <div class="product_price">@WebBanHangOnline.Common.Common.FormatNumber(item.PriceSale, 0)<span>@WebBanHangOnline.Common.Common.FormatNumber(item.Price, 0)</span></div>
                                                        <div style="display:none;" class="in_product_price"> @item.PriceSale</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="product_price">@WebBanHangOnline.Common.Common.FormatNumber(item.Price, 0)</div>
                                                        <div style="display:none;" class="in_product_price"> @item.Price</div>
                                                    }
                                                </div>
                                            </div>
                                            <div class="red_button add_to_cart_button"><a href="#" class="btnAddToCart" data-id="@item.Id">Thêm giỏ hàng</a></div>
                                        </div>
                                    }
                                }
                            </div>

                            <nav class="blog-pagination justify-content-center d-flex">
                                <ul class="pagination">
                                    @{

                                        if (pagination.CurrentPage > pagination.TotalPages)
                                        {
                                            pagination.CurrentPage = pagination.TotalPages;
                                        }

                                        if (pagination.TotalPages < 1) { return; };

                                        int previewPage = 0;
                                        int nextPage = 0;

                                        if (pagination.CurrentPage > 1)
                                        {
                                            previewPage = pagination.CurrentPage - 1;
                                        }

                                        if (pagination.CurrentPage < pagination.TotalPages)
                                        {
                                            nextPage = pagination.CurrentPage + 1;
                                        }

                                        List<int> pageRange = new List<int>();
                                        pageRange.Add(pagination.CurrentPage);

                                        int delta = 2;//Số sang mỗi bên

                                        for (int i = 1; i <= delta; i++)
                                        {
                                            if (pagination.CurrentPage + i <= pagination.TotalPages)
                                            {
                                                pageRange.Add(pagination.CurrentPage + i);
                                            };

                                            if (pagination.CurrentPage - i >= 1)
                                            {
                                                pageRange.Insert(0, pagination.CurrentPage - i);
                                            };
                                        }


                                        if (pageRange[0] == 2)
                                        {
                                            pageRange.Insert(0, 1);
                                        }

                                        if (pageRange.Last() == pagination.TotalPages - 1)
                                        {
                                            pageRange.Add(pagination.TotalPages);
                                        }
                                    }


                                    @if (pageRange[0] > 2)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" onclick="ChangePage(@previewPage,@pagination.PageSize)" aria-label="Previous">
                                                <i class="fa fa-long-arrow-left" aria-hidden="true"></i>
                                            </a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" onclick="ChangePage(1,@pagination.PageSize)">1</a>
                                        </li>

                                        <li class="page-item">
                                            <a class="page-link">...</a>
                                        </li>
                                    }

                                    @if (pageRange?.Count > 0)
                                    {
                                        foreach (var item in pageRange)
                                        {
                                            string isActive = item == pagination.CurrentPage ? "active" : "";
                                            <li class="page-item @isActive">
                                                <a class="page-link" onclick="ChangePage(@item,@pagination.PageSize)">@item</a>
                                            </li>
                                        }
                                    }

                                    @if (pageRange.Last() < pagination.TotalPages - 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link">...</a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" onclick="ChangePage(@pagination.TotalPages,@pagination.PageSize)">@pagination.TotalPages</a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" onclick="ChangePage(@nextPage,@pagination.PageSize)" aria-label="Next">
                                                <i class="fa fa-long-arrow-right" aria-hidden="true"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Content/assets/js/categories_custom.js"></script>
    <script>
        function ChangePage(curentPage, pageSize, orderBy) {
            const urlParams = new URLSearchParams(window.location.search);
            const searchData = urlParams.get('search');
            if (!curentPage || curentPage < 0) curentPage = 1;
            if (!orderBy) {
                orderBy = '@pagination.OrderBy'
            }
            location.href = `/Products/Index?search=${searchData ? searchData : ''}&curentPage=${curentPage}&pageSize=${pageSize}&orderBy=${orderBy}`
        }
    </script>
}